{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Xuan Truong\\\\backup\\\\front-end\\\\src\\\\components\\\\Home\\\\Contact.js\",\n  _s = $RefreshSig$();\n// Import các thư viện và hooks cần thiết\nimport React, { useState } from 'react';\nimport './Contact.css';\n\n/**\r\n * Contact Component - Hiển thị form liên hệ và thông tin liên lạc\r\n * @returns {JSX.Element} Form liên hệ và thông tin\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Contact = () => {\n  _s();\n  // Khởi tạo state cho form data\n  const [formData, setFormData] = useState({\n    fullName: '',\n    email: '',\n    phone: '',\n    message: ''\n  });\n\n  // State để quản lý thông báo\n  const [notification, setNotification] = useState({\n    show: false,\n    // Hiển thị thông báo hay không\n    type: '',\n    // Loại thông báo (success/error)\n    message: '' // Nội dung thông báo\n  });\n\n  // Hàm xử lý khi người dùng nhập liệu\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  };\n\n  // Hàm xử lý khi submit form\n  const handleSubmit = e => {\n    e.preventDefault();\n    // Kiểm tra các trường bắt buộc\n    if (!formData.fullName || !formData.email || !formData.message) {\n      setNotification({\n        show: true,\n        type: 'error',\n        message: 'Vui lòng điền đầy đủ thông tin bắt buộc'\n      });\n      return;\n    }\n\n    // TODO: Gửi data lên server\n    console.log('Form submitted:', formData);\n\n    // Hiển thị thông báo thành công\n    setNotification({\n      show: true,\n      type: 'success',\n      message: 'Cảm ơn bạn đã liên hệ. Chúng tôi sẽ phản hồi sớm nhất!'\n    });\n\n    // Reset form\n    setFormData({\n      fullName: '',\n      email: '',\n      phone: '',\n      message: ''\n    });\n\n    // Tự động ẩn thông báo sau 3 giây\n    setTimeout(() => {\n      setNotification({\n        show: false,\n        type: '',\n        message: ''\n      });\n    }, 3000);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"contact-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Li\\xEAn H\\u1EC7 V\\u1EDBi Ch\\xFAng T\\xF4i\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"contact-form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(Contact, \"qXHzhrCn5mVYiCWowUWCcZzGwVM=\");\n_c = Contact;\nexport default Contact;\nvar _c;\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Contact","_s","formData","setFormData","fullName","email","phone","message","notification","setNotification","show","type","handleChange","e","name","value","target","prevState","handleSubmit","preventDefault","console","log","setTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Xuan Truong/backup/front-end/src/components/Home/Contact.js"],"sourcesContent":["// Import các thư viện và hooks cần thiết\r\nimport React, { useState } from 'react';\r\nimport './Contact.css';\r\n\r\n/**\r\n * Contact Component - Hiển thị form liên hệ và thông tin liên lạc\r\n * @returns {JSX.Element} Form liên hệ và thông tin\r\n */\r\nconst Contact = () => {\r\n  // Khởi tạo state cho form data\r\n  const [formData, setFormData] = useState({\r\n    fullName: '',\r\n    email: '',\r\n    phone: '',\r\n    message: ''\r\n  });\r\n\r\n  // State để quản lý thông báo\r\n  const [notification, setNotification] = useState({\r\n    show: false,        // Hiển thị thông báo hay không\r\n    type: '',           // Loại thông báo (success/error)\r\n    message: ''         // Nội dung thông báo\r\n  });\r\n\r\n  // Hàm xử lý khi người dùng nhập liệu\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prevState => ({\r\n      ...prevState,\r\n      [name]: value\r\n    }));\r\n  };\r\n\r\n  // Hàm xử lý khi submit form\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // Kiểm tra các trường bắt buộc\r\n    if (!formData.fullName || !formData.email || !formData.message) {\r\n      setNotification({\r\n        show: true,\r\n        type: 'error',\r\n        message: 'Vui lòng điền đầy đủ thông tin bắt buộc'\r\n      });\r\n      return;\r\n    }\r\n\r\n    // TODO: Gửi data lên server\r\n    console.log('Form submitted:', formData);\r\n\r\n    // Hiển thị thông báo thành công\r\n    setNotification({\r\n      show: true,\r\n      type: 'success',\r\n      message: 'Cảm ơn bạn đã liên hệ. Chúng tôi sẽ phản hồi sớm nhất!'\r\n    });\r\n\r\n    // Reset form\r\n    setFormData({\r\n      fullName: '',\r\n      email: '',\r\n      phone: '',\r\n      message: ''\r\n    });\r\n\r\n    // Tự động ẩn thông báo sau 3 giây\r\n    setTimeout(() => {\r\n      setNotification({ show: false, type: '', message: '' });\r\n    }, 3000);\r\n  };\r\n\r\n  return (\r\n    <div className=\"contact-container\">\r\n      <h2>Liên Hệ Với Chúng Tôi</h2>\r\n      <form className=\"contact-form\">\r\n        {/* Các trường trong form */}\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Contact; "],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,eAAe;;AAEtB;AACA;AACA;AACA;AAHA,SAAAC,MAAA,IAAAC,OAAA;AAIA,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB;EACA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC;IACvCO,QAAQ,EAAE,EAAE;IACZC,KAAK,EAAE,EAAE;IACTC,KAAK,EAAE,EAAE;IACTC,OAAO,EAAE;EACX,CAAC,CAAC;;EAEF;EACA,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC;IAC/Ca,IAAI,EAAE,KAAK;IAAS;IACpBC,IAAI,EAAE,EAAE;IAAY;IACpBJ,OAAO,EAAE,EAAE,CAAS;EACtB,CAAC,CAAC;;EAEF;EACA,MAAMK,YAAY,GAAIC,CAAC,IAAK;IAC1B,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAChCb,WAAW,CAACc,SAAS,KAAK;MACxB,GAAGA,SAAS;MACZ,CAACH,IAAI,GAAGC;IACV,CAAC,CAAC,CAAC;EACL,CAAC;;EAED;EACA,MAAMG,YAAY,GAAIL,CAAC,IAAK;IAC1BA,CAAC,CAACM,cAAc,CAAC,CAAC;IAClB;IACA,IAAI,CAACjB,QAAQ,CAACE,QAAQ,IAAI,CAACF,QAAQ,CAACG,KAAK,IAAI,CAACH,QAAQ,CAACK,OAAO,EAAE;MAC9DE,eAAe,CAAC;QACdC,IAAI,EAAE,IAAI;QACVC,IAAI,EAAE,OAAO;QACbJ,OAAO,EAAE;MACX,CAAC,CAAC;MACF;IACF;;IAEA;IACAa,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEnB,QAAQ,CAAC;;IAExC;IACAO,eAAe,CAAC;MACdC,IAAI,EAAE,IAAI;MACVC,IAAI,EAAE,SAAS;MACfJ,OAAO,EAAE;IACX,CAAC,CAAC;;IAEF;IACAJ,WAAW,CAAC;MACVC,QAAQ,EAAE,EAAE;MACZC,KAAK,EAAE,EAAE;MACTC,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE;IACX,CAAC,CAAC;;IAEF;IACAe,UAAU,CAAC,MAAM;MACfb,eAAe,CAAC;QAAEC,IAAI,EAAE,KAAK;QAAEC,IAAI,EAAE,EAAE;QAAEJ,OAAO,EAAE;MAAG,CAAC,CAAC;IACzD,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;EAED,oBACER,OAAA;IAAKwB,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAChCzB,OAAA;MAAAyB,QAAA,EAAI;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC9B7B,OAAA;MAAMwB,SAAS,EAAC;IAAc;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAExB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAAC3B,EAAA,CAtEID,OAAO;AAAA6B,EAAA,GAAP7B,OAAO;AAwEb,eAAeA,OAAO;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}